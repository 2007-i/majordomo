<?php/** * http_request short summary. * * http_request description. * * @version 1.0 * @author LDV */class http_request{   /**    * Path to cookie file    * @var string    */   var $cookie;      /**    * Web page url    * @var string    */   var $url;      /**    * Data to post request    * @var string    */   var $postData;      var $proxy;      var $proxyStatus;       var $useSSL = false;      var $userAgent = "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11";               /**    * Set cookie file for store logn session    * @param string $cookieFile     * @return boolean    */   function SetCookieFile()   {            $fp = fopen($this->cookie, "w");      fclose($fp);            if (!file_exists($this->cookie))      {         DebMes("Can't create cookie file");         return false;      }            return true;   }      /**    * Get page content    * @return mixed    */   function GetPageContent()   {      $ch = curl_init();      curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);   // возвращает веб-страницу            if($this->proxyStatus == 'on' && $this->proxy !== '')      {         curl_setopt($ch, CURLOPT_HTTPPROXYTUNNEL, TRUE);       //          curl_setopt($ch, CURLOPT_PROXY, $this->proxy);       //       }            if ($this->cookie !== '' && is_file($this->cookie))      {         curl_setopt($ch, CURLOPT_COOKIEFILE, $this->cookie);      }            if ($this->useSSL)      {         curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);         curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);      }            curl_setopt($ch, CURLOPT_URL, $this->url);            ob_start();      return curl_exec($ch);      ob_end_clean();      curl_close();   }      /**    * WebsiteLogin    * @param string Page Url     * @param string Cookie file    * @param string Data for post request     * @param string proxy      * @param string $proxyStatus on/off    * @return     */   function GetAuthPageContent()   {      $login = curl_init();      curl_setopt($login, CURLOPT_COOKIEJAR, $this->cookie);      curl_setopt($login, CURLOPT_COOKIEFILE, $this->cookie);      curl_setopt($login, CURLOPT_USERAGENT, $this->userAgent);        curl_setopt($login, CURLOPT_TIMEOUT, 40);        // таймаут ответа      curl_setopt($login, CURLOPT_RETURNTRANSFER, TRUE);   // возвращает веб-страницу            if($this->proxyStatus == 'on')      {         curl_setopt($login, CURLOPT_HTTPPROXYTUNNEL, TRUE);       //          curl_setopt($login, CURLOPT_PROXY, $proxy);       //       }            curl_setopt($login, CURLOPT_URL, $this->url);      curl_setopt($login, CURLOPT_HEADER, TRUE);           // не возвращает заголовки      curl_setopt($login, CURLOPT_USERAGENT, $this->userAgent);  // useragent      curl_setopt($login, CURLOPT_FOLLOWLOCATION, TRUE);   // переходит по редиректам      curl_setopt($login, CURLOPT_POST, TRUE);   //       curl_setopt($login, CURLOPT_POSTFIELDS, $this->postData);   //             if ($this->useSSL)      {         curl_setopt($login, CURLOPT_SSL_VERIFYPEER, FALSE);         curl_setopt($login, CURLOPT_SSL_VERIFYHOST, FALSE);      }            ob_start();      return curl_exec($login);      ob_end_clean();      curl_close($login);      unset($login);   }      function Test()   {      return "test!";   }}